import anime from "animejs";
import { useRouter } from "next/router";
import { useContext, useEffect, useRef } from "react";
import UiContext from "../../components/Context/UiContext";
import colors from "../../utils/colors";
import Head from "next/head";
import Header from "../../components/Header";
import Texture from "../../components/Texture";
import clsx from "clsx";
import Layout from "../../components/Layout/Layout";
import Container from "../../components/Container";
import Footer from "../../components/Footer";

export default function BookingIndex() {
    const router = useRouter();
    const { booking_index } = router.query;
    const { isDarkMode } = useContext(UiContext);
    const displayNoneTimeoutRect = useRef<NodeJS.Timeout>();

    useEffect(() => {
        const TEXTURE_DUR = 650;
        anime({
            targets: `.dark-texture-panel`,
            opacity: isDarkMode ? '1' : '0',
            duration: TEXTURE_DUR,
            easing: 'easeInOutQuad',
            begin() {
                clearTimeout(displayNoneTimeoutRect.current);
                document
                    .querySelectorAll<SVGElement>(isDarkMode ? '.dark-texture-panel' : '.light-texture-panel')
                    .forEach((ele) => (ele.style.display = 'block'));
                displayNoneTimeoutRect.current = setTimeout(
                    () =>
                        document
                            .querySelectorAll<SVGElement>(isDarkMode ? '.light-texture-panel' : '.dark-texture-panel')
                            .forEach((ele) => (ele.style.display = 'none')),
                    TEXTURE_DUR,
                );
            },
        });
    }, [isDarkMode])

    const bookingIndexStr: string = booking_index as string;

    const pageData: Record<string, { route: string }> = {
        "1": {
            route: "landing-pages"
        },
        "2": {
            route: "review"
        },
        "3": {
            route: "strategy-call"
        }
    }

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name='description' content='Generated by create next app' />
                <link rel='icon' href='/favicon.ico' />
                <meta name='theme-color' content={colors.primary[100]} />
            </Head>
            <Header />
            <main className={clsx('overflow-x-hidden relative')}>
                <>
                    <div className='absolute-center overflow-hidden'>
                        <Texture fadeIn fadeOut />
                        <Texture fadeIn />
                        <Texture />
                        <Texture />
                    </div>
                    <Container className={""}>
                        <Layout>
                            {pageData[bookingIndexStr] ? (
                                <iframe
                                    src={`https://meet.landingjoy.com/${pageData[bookingIndexStr].route}?view=compact`}
                                    className="m-auto max-w-[850px] w-full mt-10 h-[100vh] sm:h-[650px] rounded-md overflow-hidden shadow-lg bg-transparent"
                                    frameBorder="0"
                                    scrolling="yes"
                                    allowTransparency
                                />
                            ) : (
                                <div className="h-[100vh] sm:h-[650px]" />
                            )
                            }
                        </Layout>
                    </Container>
                    <Container className='bg-black text-white'>
                        <Layout>
                            <Footer />
                        </Layout>
                    </Container>
                </>
            </main>
        </>
    )
}